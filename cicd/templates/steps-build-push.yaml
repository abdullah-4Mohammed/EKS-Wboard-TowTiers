steps:
- task: Docker@2
  displayName: Build Docker image
  inputs:
    repository: $(imageRepository)/wbapp
    command: build
    dockerfile: $(dockerFile)
    tags: |
      $(Build.BuildId)
      latest

- script: |
    set -ex
    docker images
    echo "buildid $(Build.BuildId)"
  displayName: 'Display image name'

- task: ECRPushImage@1
  displayName: Push to ECR
  inputs:
    awsCredentials: $(awsConnection)
    regionName: $(region)
    imageSource: 'imagename'
    sourceImageName: '$(imageRepository)/wbapp'
    sourceImageTag: '$(Build.BuildId)'   
    repositoryName: $(imageRepository)
    pushTag: "wbapp-$(Build.BuildId)"

- task: ECRPushImage@1
  displayName: Push to ECR 'latest' tag
  inputs:
    awsCredentials: $(awsConnection)
    regionName: $(region)
    imageSource: 'imagename'
    sourceImageName: '$(imageRepository)/wbapp'
    sourceImageTag: '$(Build.BuildId)'   
    repositoryName: $(imageRepository)
    pushTag: latest

- task: AWSCLI@1
  displayName: Update kubeconfig
  inputs:
    awsCredentials: '$(awsConnection)'
    regionName: '$(region)'
    awsCommand: 'eks'
    awsSubCommand: 'update-kubeconfig'
    awsArguments: '--name $(clusterName) --region $(region)'

- script: |
    set -ex
    kubectl apply -f $(System.DefaultWorkingDirectory)/deploy/K8s/wboard-deployment.yaml
    kubectl apply -f $(System.DefaultWorkingDirectory)/deploy/K8s/wboard-service.yaml
  displayName: Deploy to wbapp to EKS
